---
- name: copy traefik configuration
  template:
    src: traefik.toml.j2
    dest: /srv/traefik.toml

- name: create acme dir storage
  file:
    path: /srv/acme
    state: directory

- name: Deploy core stack
  docker_stack:
    name: "{{ base_stack_name }}"
    with_registry_auth: true
    resolve_image: never
    compose:
      - version: '3'
        services:
          traefik:
            image: traefik:v2.3
            environment:
              DO_AUTH_TOKEN: "{{ digitalocean_api_token }}"
            ports:
              - 80:80
              - 443:443
            volumes:
              - /var/run/docker.sock:/var/run/docker.sock
              - /srv/traefik.toml:/etc/traefik/traefik.toml
              - /srv/acme:/etc/traefik/acme
            networks:
              - traefiknet
              - appnet
            deploy:
              placement:
                constraints:
                  - "node.role==manager"
              labels:
                - "traefik.enable=true"
                - "traefik.http.routers.dashboard.rule=Host(`traefik.{{base_hostname}}`) && (PathPrefix(`/api`) || PathPrefix(`/dashboard`))"
                - "traefik.http.routers.dashboard.service=api@internal"
                - "traefik.http.routers.dashboard.middlewares=auth"
                - "traefik.http.routers.dashboard.entrypoints=websecure"
                - "traefik.http.routers.dashboard.tls.certresolver=tlsresolver"
                - "traefik.http.middlewares.auth.basicauth.users=test:$$apr1$$MOMEjVtn$$.10ydpv.z80xNBRsmha9S0"
                - "traefik.http.services.traefik-service.loadbalancer.server.port=9999"
                - "traefik.http.routers.dashboard.tls.domains[0].main={{base_hostname}}"
                - "traefik.http.routers.dashboard.tls.domains[0].sans=*.{{base_hostname}}"
#          whoami:
#            image: traefik/whoami
#            networks:
#              - traefiknet
#            deploy:
#              labels:
#                - "traefik.enable=true"
#                - "traefik.http.routers.whoami.rule=Host(`whoami.{{base_hostname}}`)"
#                - "traefik.http.routers.whoami.entrypoints=websecure"
#                - "traefik.http.routers.whoami.tls=true"
#                - "traefik.http.routers.whoami.tls.certresolver=tlsresolver"
#                - "traefik.http.routers.whoami.tls.domains[0].main={{base_hostname}}"
#                - "traefik.http.routers.whoami.tls.domains[0].sans=*.{{base_hostname}}"
#                - "traefik.http.services.whoami-service.loadbalancer.server.port=80"
#          datadog:
#            image: datadog/agent:7
#            environment:
#              - DD_API_KEY={{ datadog_agent_token }}
#              - DD_LOGS_ENABLED=true
#              - DD_LOGS_CONFIG_CONTAINER_COLLECT_ALL=true
#              - "DD_CONTAINER_EXCLUDE=\"name:{{base_hostname}}_datadog\""
#            volumes:
#              - /var/run/docker.sock:/var/run/docker.sock
#              - /proc/:/host/proc/:ro
#              - /sys/fs/cgroup:/host/sys/fs/cgroup:ro
#              - /opt/datadog-agent/run:/opt/datadog-agent/run:rw
#            deploy:
#              mode: global
        networks:
          traefiknet:
            external: true
          appnet:
            external: true
